pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/henisahar/automation-test-selenium.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withEnv(["PATH+SONAR=${tool name: 'SonarQube Scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'}"]) {
                        sh "sonar-scanner -Dsonar.projectKey=your_project_key -Dsonar.sources=./src -Dsonar.host.url=https://your-sonarqube-server.com -Dsonar.login=your_token"
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("saharheni/selenium-tests:${env.BUILD_ID}")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        dockerImage.push("${env.BUILD_ID}")
                        dockerImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            emailext(
                to: 'saharheni6@gmail.com, sahar.heni@ensi-uma.tn',
                subject: "Build ${currentBuild.fullDisplayName}",
                body: "Build ${currentBuild.fullDisplayName} finished with status: ${currentBuild.result}"
            )
        }
    }
}
